/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class bda_tensorflow_jni_Tensor */

#ifndef _Included_bda_tensorflow_jni_Tensor
#define _Included_bda_tensorflow_jni_Tensor
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bda_tensorflow_jni_Tensor
 * Method:    allocate
 * Signature: (ILbda/tensorflow/jni/TensorShape;)V
 */
JNIEXPORT void JNICALL Java_bda_tensorflow_jni_Tensor_allocate
  (JNIEnv *, jobject, jint, jobject);

/*
 * Class:     bda_tensorflow_jni_Tensor
 * Method:    deallocateMemory
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bda_tensorflow_jni_Tensor_deallocateMemory
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bda_tensorflow_jni_Tensor
 * Method:    showContent
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_bda_tensorflow_jni_Tensor_showContent
  (JNIEnv *, jobject);

/*
 * Class:     bda_tensorflow_jni_Tensor
 * Method:    toFloatArray
 * Signature: ()[F
 */
JNIEXPORT jfloatArray JNICALL Java_bda_tensorflow_jni_Tensor_toFloatArray
  (JNIEnv *, jobject);

/*
 * Class:     bda_tensorflow_jni_Tensor
 * Method:    initFromFloatArray
 * Signature: ([F)V
 */
JNIEXPORT void JNICALL Java_bda_tensorflow_jni_Tensor_initFromFloatArray
  (JNIEnv *, jobject, jfloatArray);

/*
 * Class:     bda_tensorflow_jni_Tensor
 * Method:    toLongArray
 * Signature: ()[J
 */
JNIEXPORT jlongArray JNICALL Java_bda_tensorflow_jni_Tensor_toLongArray
  (JNIEnv *, jobject);

/*
 * Class:     bda_tensorflow_jni_Tensor
 * Method:    initFromLongArray
 * Signature: ([J)V
 */
JNIEXPORT void JNICALL Java_bda_tensorflow_jni_Tensor_initFromLongArray
  (JNIEnv *, jobject, jlongArray);

/*
 * Class:     bda_tensorflow_jni_Tensor
 * Method:    getTensorShape
 * Signature: ()[I
 */
JNIEXPORT jintArray JNICALL Java_bda_tensorflow_jni_Tensor_getTensorShape
  (JNIEnv *, jobject);

/*
 * Class:     bda_tensorflow_jni_Tensor
 * Method:    toBooleanArray
 * Signature: ()[Z
 */
JNIEXPORT jbooleanArray JNICALL Java_bda_tensorflow_jni_Tensor_toBooleanArray
  (JNIEnv *, jobject);

/*
 * Class:     bda_tensorflow_jni_Tensor
 * Method:    initFromIntArray
 * Signature: ([I)V
 */
JNIEXPORT void JNICALL Java_bda_tensorflow_jni_Tensor_initFromIntArray
  (JNIEnv *, jobject, jintArray);

#ifdef __cplusplus
}
#endif
#endif
